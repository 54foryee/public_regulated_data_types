#
# A generic high-resolution position-velocity estimate. This is a top-level data type for this namespace.
# The information contained in this message is expected to be useful in a majority of vehicular applications relying
# on GNSS positioning.
# Fields whose estimates are unavailable shall be NaN and their variances shall be a positive infinity.
#

# The timestamp of these estimates in the network-syncrhonized time system (not to be confused with GNSS time).
uavcan.time.SynchronizedTimestamp.1.0 timestamp

# Estimated geo position and altitude.
robotics.nav.geo.Point.0.1 position

# Positive Z indicates downward motion. Unknown components shall be NaN; particularly:
#  - 3D fix: all components are finite.
#  - 2D fix: X/Y are finite, Z is NaN.
#  - time-only fix or no fix: all components are NaN.
uavcan.si.unit.velocity.Vector3.1.0 velocity_ned

# Geoidal separation is the height difference between the ellipsoid and the mean sea level in the current position.
# Negative value means that the mean sea level is below the ellipsoid.
# A similar field with compatible semantics is used in the standard GGA sentence of NMEA 0183.
uavcan.si.unit.length.Scalar.1.0 geoidal_separation

@assert (_offset_ % 8 == {0}) && (_offset_.count == 1)
void2

# The position covariance is defined relative to a tangential plane through the estimated position.
#
#                                                              northward   eastward    downward
#    Covariance matrix   | latitude   longitude    height      velocity    velocity    velocity
#   ---------------------|-------------------------------------------------------------------------
#    latitude            |    m^2        m^2        m^2          m^2/s       m^2/s       m^2/s
#    longitude           |    m^2        m^2        m^2          m^2/s       m^2/s       m^2/s
#    height              |    m^2        m^2        m^2          m^2/s       m^2/s       m^2/s
#    northward velocity  |   m^2/s      m^2/s      m^2/s        m^2/s^2     m^2/s^2     m^2/s^2
#    eastward velocity   |   m^2/s      m^2/s      m^2/s        m^2/s^2     m^2/s^2     m^2/s^2
#    downward velocity   |   m^2/s      m^2/s      m^2/s        m^2/s^2     m^2/s^2     m^2/s^2
#
# The matrix packing rules are defined in the Specification (please read it). Particularly:
#   - Empty array is equivalent to a zero matrix, which represents unknown covariance.
#   - An array of N elements represents a diagonal matrix of shape NxN; the array elements define the diagonal.
#   - An array of ((1+N)*N)/2 elements represents a symmetric matrix of shape NxN;
#     the array elements define the upper-right triangle in the row-major order.
#
# An infinite variance indicates that the corresponding estimate is unavailable.
# For example, if the element corresponding to height is a positive infinity while longitude and latitude variances
# are finite, the current fix is 2D.
float16[<=36] covariance

@assert _offset_ % 8 == {0}
@assert _offset_.min / 8 + 2 * 6 <= 63  # One CAN FD frame with diagonal covariance.
