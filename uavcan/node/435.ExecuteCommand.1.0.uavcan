#
# Instructs the server node to execute or commence execution of a simple predefined command.
#

# Standard pre-defined commands are at the top of the range.
# Vendors can define arbitrary vendor-specific commands in the bottom part of the range (starting from zero).
# Vendor-specific commands must not use identifiers above 32767.
uint16 COMMAND_RESTART         = 65535  # Reboot the node
uint16 COMMAND_POWER_OFF       = 65534  # Shut down the node; further access will not be possible until turned on
uint16 COMMAND_SOFTWARE_UPDATE = 65533  # Begin the software update process using uavcan.file.Read
uint16 COMMAND_FACTORY_RESET   = 65532  # Return the node's configuration back to factory default
uint16 COMMAND_EMERGENCY_STOP  = 65531  # Cease activities immediately, enter a safe state until restarted
uint16 command

# A string parameter supplied to the command. The format and interpretation is command-specific.
# The standard commands do not use this field (ignore it), excepting the following:
#
#   - COMMAND_SOFTWARE_UPDATE
#     The parameter contains the path to the new software image file to be downloaded by the server from the client
#     using the standard service uavcan.file.Read. Observe that this operation swaps the roles of the client and
#     the server. Upon reception of this command, the server (updatee) will evaluate whether it is possible to
#     begin the software update process. If that is deemed impossible, the command will be rejected with one of the
#     error codes defined in the response section of this definition (e.g., DENIED if the node is currently on-duty
#     and a sudden interruption of its activities is considered unsafe, and so on). If an update process is already
#     underway, the updatee should abort the process and restart with the new file, unless the updatee can
#     determine that the specified file is the same file that is already being downloaded, in which case it is
#     allowed to respond SUCCESS and continue the old update process. If there are no other conditions precluding
#     the requested update, the updatee will return a SUCCESS and initiate the file transfer process by invoking
#     the standard service uavcan.file.Read repeatedly until the file is transferred fully (please refer to the
#     documentation for that data type for more information on its usage). While the software is being updated, the
#     updatee should set its mode (the field "mode" in uavcan.node.Status) to MODE_SOFTWARE_UPDATE. Please refer to
#     the documentation for uavcan.node.Status for more information.
uint8[<=200] parameter

---

# The result of the request.
uint8 STATUS_SUCCESS        = 0     # Started or executed successfully
uint8 STATUS_FAILURE        = 1     # Could not start or execution failed
uint8 STATUS_DENIED         = 2     # The server understood the command but refused to execute it
uint8 STATUS_BAD_COMMAND    = 3     # The requested command is not known or not supported
uint8 STATUS_BAD_PARAMETER  = 4     # The supplied parameter cannot be used with the selected command
uint8 status

# Reserved for future use
void48
