#
# Instructs the server node to execute or commence execution of a simple predefined command.
# All standard commands are optional; i.e., not guaranteed to be supported by all nodes.
#

# Standard pre-defined commands are at the top of the range (defined below).
# Vendors can define arbitrary, vendor-specific commands in the bottom part of the range (starting from zero).
# Vendor-specific commands must not use identifiers above 32767.
uint16 command

# Reboot the node.
# Note that some standard commands may or may not require a restart in order to take effect; e.g., factory reset.
uint16 COMMAND_RESTART = 65535

# Shut down the node; further access will not be possible until the power is turned back on.
uint16 COMMAND_POWER_OFF = 65534

# Begin the software update process using uavcan.file.Read. This command makes use of the "parameter" field below.
# The parameter contains the path to the new software image file to be downloaded by the server from the client
# using the standard service uavcan.file.Read. Observe that this operation swaps the roles of the client and
# the server. Upon reception of this command, the server (updatee) will evaluate whether it is possible to
# begin the software update process. If that is deemed impossible, the command will be rejected with one of the
# error codes defined in the response section of this definition (e.g., DENIED if the node is currently on-duty
# and a sudden interruption of its activities is considered unsafe, and so on). If an update process is already
# underway, the updatee should abort the process and restart with the new file, unless the updatee can
# determine that the specified file is the same file that is already being downloaded, in which case it is
# allowed to respond SUCCESS and continue the old update process. If there are no other conditions precluding
# the requested update, the updatee will return a SUCCESS and initiate the file transfer process by invoking
# the standard service uavcan.file.Read repeatedly until the file is transferred fully (please refer to the
# documentation for that data type for more information on its usage). While the software is being updated, the
# updatee should set its mode (the field "mode" in uavcan.node.Status) to MODE_SOFTWARE_UPDATE. Please refer to
# the documentation for uavcan.node.Status for more information.
uint16 COMMAND_BEGIN_SOFTWARE_UPDATE = 65533

# Return the node's configuration back to the factory default settings (may require restart).
# Due to the uncertainty whether a restart is required, generic interfaces should always force a restart.
uint16 COMMAND_FACTORY_RESET = 65532

# Cease activities immediately, enter a safe state until restarted.
# Further operation may no longer be possible until a restart command is executed.
uint16 COMMAND_EMERGENCY_STOP = 65531

# This command instructs the node to store the current configuration parameter values and other persistent states
# to the non-volatile storage. Nodes are allowed to manage persistent states automatically, obviating the need for
# this command by committing all such data to the non-volatile memory automatically as necessary. However, some
# nodes may lack this functionality, in which case this parameter should be used. Generic interfaces should always
# invoke this command in order to ensure that the data is stored even if the node doesn't implement automatic
# persistence management.
uint16 COMMAND_STORE_PERSISTENT_STATES = 65530

# A string parameter supplied to the command. The format and interpretation is command-specific.
# The standard commands do not use this field (ignore it), excepting the following:
#   - COMMAND_BEGIN_SOFTWARE_UPDATE
void1
uint8[<=112] parameter

@assert offset % 8 == {0}
@assert offset.max <= (124 * 8)     # Two CAN FD frames max

---

# The result of the request.
uint8 STATUS_SUCCESS        = 0     # Started or executed successfully
uint8 STATUS_FAILURE        = 1     # Could not start or the desired outcome could not be reached
uint8 STATUS_NOT_AUTHORIZED = 2     # Denied due to lack of authorization
uint8 STATUS_BAD_COMMAND    = 3     # The requested command is not known or not supported
uint8 STATUS_BAD_PARAMETER  = 4     # The supplied parameter cannot be used with the selected command
uint8 STATUS_BAD_STATE      = 5     # The current state of the node does not permit execution of this command
uint8 STATUS_INTERNAL_ERROR = 6     # The operation should have succeeded but an unexpected failure occurred
uint8 status

# Reserved for future use
void48
